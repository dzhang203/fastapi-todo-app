/* 
CSS LEARNING NOTES FOR PYTHON DEVELOPERS:
- Think of CSS like matplotlib styling - defines visual appearance
- Selectors work like pandas filters - target specific elements
- Properties are like matplotlib parameters - control appearance aspects
- CSS cascades like inheritance in OOP - child elements inherit parent styles
*/

/* 
CSS Custom Properties (CSS Variables)
Similar to defining constants at the top of a Python script
These create a consistent design system across the entire application
*/
:root {
    --primary-color: #2563eb;          /* Main brand color (blue) */
    --primary-hover: #1d4ed8;          /* Darker blue for hover states */
    --success-color: #10b981;          /* Green for completed items */
    --danger-color: #ef4444;           /* Red for delete buttons */
    --background-color: #f4f1e7;       /* Yellow-gray page background */
    --surface-color: #ffffff;          /* White for cards/containers */
    --text-primary: #1e293b;           /* Dark gray for main text */
    --text-secondary: #64748b;         /* Medium gray for secondary text */
    --text-muted: #94a3b8;             /* Light gray for muted text */
    --border-color: #e2e8f0;           /* Very light gray for borders */
    --border-radius: 8px;              /* Rounded corner radius */
    --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);     /* Small shadow */
    --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1);    /* Medium shadow */
    --spacing-xs: 0.25rem;             /* 4px */
    --spacing-sm: 0.5rem;              /* 8px */
    --spacing-md: 1rem;                /* 16px */
    --spacing-lg: 1.5rem;              /* 24px */
    --spacing-xl: 2rem;                /* 32px */
}

/*
CSS Reset - like clearing matplotlib defaults
This removes browser-specific styling to create a consistent baseline
*/
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;  /* Makes width/height include padding and borders */
}

/*
Body styles - the "figure" of our web page
Similar to setting plt.figure(figsize=..., facecolor=...)
*/
body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    line-height: 1.6;              /* Spacing between lines of text */
    color: var(--text-primary);    /* Using our CSS variable */
    background-color: var(--background-color);
    min-height: 100vh;             /* At least full viewport height */
}

/*
Container - like matplotlib's tight_layout()
Centers content and provides consistent margins

NOTE: This .container {} class is what sets the properties of the <div class="container"> in index.html
*/
.container {
    max-width: 800px;              /* Don't get too wide on large screens */
    margin: 0 auto;                /* Center horizontally */
    padding: var(--spacing-md);
    min-height: 100vh;
    display: flex;                 /* Flexbox layout */
    flex-direction: column;        /* Stack children vertically */
}

/*
Header styling - like plt.title() with custom formatting
*/
header {
    text-align: center;
    margin-bottom: var(--spacing-xl);
    padding: var(--spacing-xl) 0;
}

header h1 {
    font-size: 2.5rem;             /* Large title */
    font-weight: 700;              /* Bold */
    color: var(--primary-color);   /* Blue color */
    margin-bottom: var(--spacing-sm);
}

header p {
    font-size: 1.1rem;
    color: var(--text-secondary);  /* Lighter gray */
}

/*
Main content area - like the main plotting area
*/
main {
    flex: 1;                       /* Take up remaining vertical space */
    display: flex;
    flex-direction: column;
    gap: var(--spacing-xl);        /* Space between sections */
}

/*
Add todo form section - like a control panel in a GUI
*/
.add-todo-section {
    background: var(--surface-color);     /* White background */
    padding: var(--spacing-lg);
    border-radius: var(--border-radius);  /* Rounded corners */
    box-shadow: var(--shadow-sm);         /* Subtle shadow */
    border: 1px solid var(--border-color);
}

/*
Input group - arranges form elements horizontally
Like plt.subplots(1, 2) for side-by-side elements
*/
.input-group {
    display: flex;
    gap: var(--spacing-sm);
}

/*
Text input styling - like styling an input widget
*/
#todo-input {
    flex: 1;                       /* Take up remaining horizontal space */
    padding: var(--spacing-md);
    border: 2px solid var(--border-color);
    border-radius: var(--border-radius);
    font-size: 1rem;
    transition: border-color 0.2s ease;  /* Smooth color change on focus */
}

/*
Focus state - visual feedback when input is selected
Like highlighting the active element in a GUI
*/
#todo-input:focus {
    outline: none;                 /* Remove default browser outline */
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px rgb(37 99 235 / 0.1);  /* Blue glow */
}

#todo-input::placeholder {
    color: var(--text-muted);      /* Light gray placeholder text */
}

/*
Button styling - like customizing matplotlib buttons
*/
.add-btn {
    padding: var(--spacing-md) var(--spacing-lg);
    background: var(--primary-color);
    color: white;
    border: none;
    border-radius: var(--border-radius);
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;               /* Show pointer cursor on hover */
    transition: background-color 0.2s ease;
    white-space: nowrap;           /* Don't wrap button text */
}

.add-btn:hover {
    background: var(--primary-hover);  /* Darker blue on hover */
}

.add-btn:active {
    transform: translateY(1px);    /* Slight "press down" effect */
}

/*
Loading and error states - like status indicators in GUIs
*/
.loading, .error-message {
    text-align: center;
    padding: var(--spacing-lg);
    border-radius: var(--border-radius);
    font-weight: 500;
}

.loading {
    background: #eff6ff;           /* Light blue background */
    color: var(--primary-color);
    border: 1px solid #bfdbfe;
}

.error-message {
    background: #fef2f2;           /* Light red background */
    color: var(--danger-color);
    border: 1px solid #fecaca;
}

/*
The key rule that fixes your "Loading todos..." visibility issue!
*/
.hidden {
    display: none;                 /* Completely hide element */
}

/*
Todos section - main content container
Like a matplotlib subplot with its own styling
*/
.todos-section {
    background: var(--surface-color);
    border-radius: var(--border-radius);
    box-shadow: var(--shadow-sm);
    border: 1px solid var(--border-color);
    overflow: hidden;              /* Clip content to rounded corners */
}

.todos-header {
    padding: var(--spacing-lg);
    border-bottom: 1px solid var(--border-color);
    display: flex;
    justify-content: space-between;  /* Space between title and stats */
    align-items: center;
    background-color: #f8fafc;     /* Slightly gray background */
}

.todos-header h2 {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--text-primary);
}

.todos-stats {
    display: flex;
    gap: var(--spacing-sm);
    font-size: 0.875rem;           /* Smaller text */
    color: var(--text-secondary);
}

.separator {
    color: var(--text-muted);      /* Gray bullet point */
}

/*
Todo list - like styling a pandas DataFrame display
*/
.todos-list {
    list-style: none;              /* Remove bullet points */
}

.todo-item {
    border-bottom: 1px solid var(--border-color);
    transition: background-color 0.2s ease;
}

.todo-item:last-child {
    border-bottom: none;           /* No border on last item */
}

.todo-item:hover {
    background-color: #f8fafc;     /* Light gray on hover */
}

.todo-content {
    display: flex;
    align-items: center;
    padding: var(--spacing-lg);
    gap: var(--spacing-md);
}

.todo-checkbox {
    width: 18px;
    height: 18px;
    cursor: pointer;
    accent-color: var(--success-color);  /* Green checkmark */
}

.todo-text {
    flex: 1;                       /* Take up remaining space */
    font-size: 1rem;
    line-height: 1.5;
    transition: color 0.2s ease, text-decoration 0.2s ease;
}

/*
Completed state styling - like graying out processed data
*/
.todo-item.completed .todo-text {
    color: var(--text-muted);      /* Gray out text */
    text-decoration: line-through; /* Strike through text */
}

.todo-actions {
    display: flex;
    gap: var(--spacing-sm);
    margin-left: auto;             /* Push to right side */
    opacity: 0;                    /* Initially invisible */
    transition: opacity 0.2s ease;
}

.todo-item:hover .todo-actions {
    opacity: 1;                    /* Show on hover */
}

.edit-btn, .delete-btn {
    padding: var(--spacing-xs) var(--spacing-sm);
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    background: white;
    cursor: pointer;
    font-size: 0.875rem;
    transition: all 0.2s ease;
}

.edit-btn {
    color: var(--primary-color);
    border-color: var(--primary-color);
}

.edit-btn:hover {
    background: var(--primary-color);
    color: white;
}

.delete-btn {
    color: var(--danger-color);
    border-color: var(--danger-color);
}

.delete-btn:hover {
    background: var(--danger-color);
    color: white;
}

/*
Edit form - inline editing interface
*/
.edit-form {
    padding: var(--spacing-lg);
    background: #f8fafc;
    border-top: 1px solid var(--border-color);
}

.edit-input {
    width: 100%;
    padding: var(--spacing-sm) var(--spacing-md);
    border: 2px solid var(--border-color);
    border-radius: var(--border-radius);
    font-size: 1rem;
    margin-bottom: var(--spacing-md);
}

.edit-input:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px rgb(37 99 235 / 0.1);
}

.edit-actions {
    display: flex;
    gap: var(--spacing-sm);
    justify-content: flex-end;     /* Align buttons to right */
}

.save-btn, .cancel-btn {
    padding: var(--spacing-sm) var(--spacing-md);
    border: none;
    border-radius: var(--border-radius);
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.2s ease;
}

.save-btn {
    background: var(--success-color);
    color: white;
}

.save-btn:hover {
    background: #059669;           /* Darker green */
}

.cancel-btn {
    background: var(--text-muted);
    color: white;
}

.cancel-btn:hover {
    background: #6b7280;           /* Darker gray */
}

/*
Empty state - like a "No data to display" message
*/
.empty-state {
    padding: var(--spacing-xl);
    text-align: center;
    color: var(--text-secondary);
}

.empty-icon {
    font-size: 3rem;               /* Large emoji */
    margin-bottom: var(--spacing-md);
}

.empty-state h3 {
    font-size: 1.25rem;
    margin-bottom: var(--spacing-sm);
    color: var(--text-primary);
}

.empty-state p {
    font-size: 1rem;
}

/*
Footer - like figure caption
*/
footer {
    text-align: center;
    padding: var(--spacing-xl) 0;
    color: var(--text-muted);
    font-size: 0.875rem;
    border-top: 1px solid var(--border-color);
    margin-top: var(--spacing-xl);
}

/*
Responsive design - like different DPI settings for plots
Adapts layout for mobile devices (< 640px width)
*/
@media (max-width: 640px) {
    .container {
        padding: var(--spacing-sm);
    }
    
    header h1 {
        font-size: 2rem;            /* Smaller title on mobile */
    }
    
    .input-group {
        flex-direction: column;     /* Stack form elements vertically */
    }
    
    .add-btn {
        width: 100%;                /* Full width button */
    }
    
    .todos-header {
        flex-direction: column;
        gap: var(--spacing-sm);
        align-items: flex-start;
    }
    
    .todo-content {
        padding: var(--spacing-md);
    }
    
    .todo-actions {
        opacity: 1;                 /* Always show on mobile (no hover) */
    }
    
    .edit-actions {
        flex-direction: column;     /* Stack buttons vertically */
    }
    
    .save-btn, .cancel-btn {
        width: 100%;                /* Full width buttons */
    }
}

/*
Accessibility improvements
*/
button:focus-visible,
input:focus-visible {
    outline: 2px solid var(--primary-color);
    outline-offset: 2px;
}

/*
Smooth animations (only if user hasn't disabled them)
*/
@media (prefers-reduced-motion: no-preference) {
    .todo-item {
        transition: all 0.3s ease;
    }
    
    .todo-text {
        transition: all 0.3s ease;
    }
}

/*
High contrast mode support for accessibility
*/
@media (prefers-contrast: high) {
    :root {
        --border-color: #000000;
        --text-secondary: #000000;
    }
}